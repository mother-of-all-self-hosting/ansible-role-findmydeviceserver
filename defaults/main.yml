# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/findmydeviceserver-org/findmydeviceserver

findmydeviceserver_enabled: true

findmydeviceserver_identifier: findmydeviceserver
findmydeviceserver_base_path: "{{ findmydeviceserver_identifier }}"

# Only "latest" tag is available
findmydeviceserver_version: latest

findmydeviceserver_uid: ''
findmydeviceserver_gid: ''

# Specify URI scheme for findmydeviceserver_base_url.
findmydeviceserver_scheme: https

# The hostname at which FindMyDeviceServer is served.
findmydeviceserver_hostname: ''

# The path at which FindMyDeviceServer is exposed.
# This value must either be `/` or not end with a slash (e.g. `/findmydeviceserver`).
#
# Hosting FindMyDeviceServer under a subpath does not seem to be possible due to FindMyDeviceServer's
# technical limitations.
findmydeviceserver_path_prefix: /

findmydeviceserver_container_image: "{{ findmydeviceserver_container_image_registry_prefix }}findmydeviceserver/findmydeviceserver:{{ findmydeviceserver_container_image_tag }}"
findmydeviceserver_container_image_tag: "{{ findmydeviceserver_version }}"
findmydeviceserver_container_image_registry_prefix: "{{ findmydeviceserver_container_image_registry_prefix_upstream }}"
findmydeviceserver_container_image_registry_prefix_upstream: "{{ findmydeviceserver_container_image_registry_prefix_upstream_default }}"
findmydeviceserver_container_image_registry_prefix_upstream_default: quay.io/
findmydeviceserver_container_image_force_pull: "{{ findmydeviceserver_container_image.endswith(':latest') }}"

# Controls whether the container exposes its HTTP port (tcp/80 in the container).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:2586"), or empty string to not expose.
findmydeviceserver_container_http_host_bind_port: ''

# The base container network. It will be auto-created by this role if it doesn't exist already.
findmydeviceserver_container_network: "{{ findmydeviceserver_identifier }}"

# The port number in the container
findmydeviceserver_container_http_port: 8080

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
findmydeviceserver_container_additional_networks: "{{ findmydeviceserver_container_additional_networks_auto + findmydeviceserver_container_additional_networks_custom }}"
findmydeviceserver_container_additional_networks_auto: []
findmydeviceserver_container_additional_networks_custom: []

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
findmydeviceserver_container_additional_volumes: []

# findmydeviceserver_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `findmydeviceserver_container_labels_additional_labels`.
findmydeviceserver_container_labels_traefik_enabled: true
findmydeviceserver_container_labels_traefik_docker_network: "{{ findmydeviceserver_container_network }}"
findmydeviceserver_container_labels_traefik_hostname: "{{ findmydeviceserver_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/findmydeviceserver`).
findmydeviceserver_container_labels_traefik_path_prefix: "{{ findmydeviceserver_path_prefix }}"
findmydeviceserver_container_labels_traefik_rule: "Host(`{{ findmydeviceserver_container_labels_traefik_hostname }}`){% if findmydeviceserver_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ findmydeviceserver_container_labels_traefik_path_prefix }}`){% endif %}"
findmydeviceserver_container_labels_traefik_priority: 0
findmydeviceserver_container_labels_traefik_entrypoints: web-secure
findmydeviceserver_container_labels_traefik_tls: "{{ findmydeviceserver_container_labels_traefik_entrypoints != 'web' }}"
findmydeviceserver_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `findmydeviceserver_container_labels_traefik_additional_response_headers_custom`
findmydeviceserver_container_labels_traefik_additional_response_headers: "{{ findmydeviceserver_container_labels_traefik_additional_response_headers_auto | combine(findmydeviceserver_container_labels_traefik_additional_response_headers_custom) }}"
findmydeviceserver_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': findmydeviceserver_http_header_xss_protection} if findmydeviceserver_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': findmydeviceserver_http_header_content_type_options} if findmydeviceserver_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': findmydeviceserver_http_header_content_security_policy} if findmydeviceserver_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': findmydeviceserver_http_header_content_permission_policy} if findmydeviceserver_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': findmydeviceserver_http_header_strict_transport_security} if findmydeviceserver_http_header_strict_transport_security and findmydeviceserver_container_labels_traefik_tls else {})
  }}
findmydeviceserver_container_labels_traefik_additional_response_headers_custom: {}

# findmydeviceserver_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# findmydeviceserver_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
findmydeviceserver_container_labels_additional_labels: ''

# A list of extra arguments to pass to the container (`docker run` command)
findmydeviceserver_container_extra_arguments: []

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
findmydeviceserver_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
findmydeviceserver_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
findmydeviceserver_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
findmydeviceserver_http_header_content_permission_policy: "{{ 'interest-cohort=()' if findmydeviceserver_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
findmydeviceserver_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if findmydeviceserver_hsts_preload_enabled else '' }}"

# Controls whether to findmydeviceserver a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `findmydeviceserver_content_permission_policy`
findmydeviceserver_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `findmydeviceserver_http_header_strict_transport_security`
findmydeviceserver_hsts_preload_enabled: false

# List of systemd services that the FindMyDeviceServer systemd service depends on
findmydeviceserver_systemd_required_services_list: "{{ findmydeviceserver_systemd_required_services_list_default + findmydeviceserver_systemd_required_services_list_auto + findmydeviceserver_systemd_required_services_list_custom }}"
findmydeviceserver_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
findmydeviceserver_systemd_required_services_list_auto: []
findmydeviceserver_systemd_required_services_list_custom: []

# List of systemd services that the FindMyDeviceServer systemd service wants
findmydeviceserver_systemd_wanted_services_list: []

# Additional environment variables.
findmydeviceserver_environment_variables_additional_variables: ''
